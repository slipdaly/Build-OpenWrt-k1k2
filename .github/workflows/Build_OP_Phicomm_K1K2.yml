#=================================================
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: eSirPlayground
# Youtube Channel: https://goo.gl/fvkdwm 
#=================================================

name: Build_OP_Phicomm_K1K2

on: 
  release:
    types: [published]

  push:
    branches: 
      - master

  schedule:
    - cron: 0 23 * * 4
  
  watch:
    types: [started]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        docker rmi `docker images -q`
        echo "Deleting files, please wait ..."
        sudo rm -rf \
          /usr/share/dotnet \
          /etc/mysql \
          /etc/php
        sudo -E apt-get -y purge \
          azure-cli \
          ghc* \
          zulu* \
          hhvm \
          llvm* \
          firefox \
          google* \
          dotnet* \
          powershell \
          openjdk* \
          mysql* \
          php*
        sudo -E apt-get update
        sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev patch python3 python2.7 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex node-uglify git gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx-ucl libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf wget curl swig rsync
        sudo -E apt-get -y autoremove --purge
        sudo -E apt-get clean
    - name: Clone source code
      env: 
        REPO_URL: https://github.com/slipdaly/lede
        REPO_BRANCH: master
      run: |
        rm -rf openwrt
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
    - name: Update & Install feeds
      working-directory: ./openwrt
      run: |
        ./scripts/feeds update -a && ./scripts/feeds install -a
    - name: Import external feeds - passwall
      working-directory: ./openwrt
      run: |
        rm -rf package/slipdaly
        git clone https://github.com/slipdaly/luci-app-adblock-plus.git package/slipdaly
    - name: Configuration Customization - Build_Phicomm_K1K2
      env:
        CONFIG_FILE: 'phicomm_k1k2.config'
      run: |
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x ./customize.sh && ./customize.sh
        cd openwrt && make defconfig
        
    - name: Download package
      working-directory: ./openwrt
      run: |
        make download -j$(nproc)
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
    - name: Build firmware
      working-directory: ./openwrt
      run: |
        echo -e "$(nproc) thread build."
        make -j$(nproc) V=s
        echo "FILE_DATE=$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV
    - name : Upload OpenWrt firmware directory
      uses: actions/upload-artifact@master
      with:
        name: OpenWrt_firmware_${{ env.FILE_DATE }}
        path: openwrt/bin
    - name: Assemble artifact
      run: |
        cd openwrt
        rm -rf ./artifactphicomm/
        mkdir -p ./artifactphicomm/
        find ./bin/targets/ -name "*psg1208*sysupgrade*bin*" | xargs -i zip -j ./artifactphicomm/phicomm_k1_5.4_${{ env.FILE_DATE }}.zip {}
        find ./bin/targets/ -name "*psg1218a*sysupgrade*bin*" | xargs -i zip -j ./artifactphicomm/phicomm_k2_5.4_${{ env.FILE_DATE }}.zip {}
        
    - name: Generate release tag
      id: tag
      run: |
        echo "::set-output name=release_tag::$(date +"%Y.%m.%d-%H%M")"
        echo "::set-output name=status::success"
        
    - name: Upload firmware to release
      uses: softprops/action-gh-release@v1
      if: steps.tag.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.tag.outputs.release_tag }}
        files: openwrt/artifactphicomm/*
        
    - name: Delete workflow runs
      uses: GitRML/delete-workflow-runs@main
      with:
        retain_days: 10
        keep_minimum_runs: 3
        
    - name: Remove old Releases
      uses: dev-drprasad/delete-older-releases@v0.1.0
      with:
        keep_latest: 3
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

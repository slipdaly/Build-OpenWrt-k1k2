#=================================================
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: eSirPlayground
# Youtube Channel: https://goo.gl/fvkdwm 
#=================================================

name: Build_OP_tl802nv1lede

on: 
  #schedule:
  #  - cron: 30 16 * * 4
  
  workflow_dispatch:
      # Inputs the workflow accepts.
      inputs:
        name:
          # Friendly description to be shown in the UI instead of 'name'
          description: 'retry'
          # Default value if no value is explicitly provided
          default: 'run'
          # Input has to be provided for the workflow to run
          required: true

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id || ! github.event.sender.id

    steps:
    - name: set time zone
      uses: szenius/set-timezone@v1.1
      with:
       timezoneLinux: "Asia/Shanghai"
    
    - name: Checkout
      uses: actions/checkout@v3

    - name: Space cleanup
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL git.io/depends-ubuntu-latest)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        
        df -h
        
    - name: Clone source code
      env: 
        REPO_URL: https://github.com/coolsnowwolf/lede
        REPO_BRANCH: master
      run: |
        rm -rf openwrt
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
    - name: Update & Install feeds
      working-directory: ./openwrt
      run: |
        ./scripts/feeds update -a && ./scripts/feeds install -a
    - name: Configuration Customization - Build_tl802nv1lede
      env:
        CONFIG_FILE: 'tl802nv1lede.config'
      run: |
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x ./customize.sh && ./customize.sh
        cd openwrt && make defconfig
        
    - name: Download package
      working-directory: ./openwrt
      run: |
        make download -j$(nproc)
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
    - name: Build firmware
      working-directory: ./openwrt
      run: |
        echo -e "$(nproc) thread build."
        make -j$(nproc) V=s
        echo "FILE_DATE=$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV
    - name : Upload OpenWrt firmware directory
      uses: actions/upload-artifact@master
      with:
        name: OpenWrt_firmware_${{ env.FILE_DATE }}
        path: openwrt/bin
    - name: Assemble artifact
      run: |
        cd openwrt
        rm -rf ./artifactphicomm/
        mkdir -p ./artifactphicomm/
        find ./bin/targets/ -name "*wr802n*sysupgrade*bin*" | xargs -i zip -j ./artifactphicomm/wr802n_v1_${{ env.FILE_DATE }}.zip {}
        
    - name: Generate release tag
      id: tag
      run: |
        echo "::set-output name=release_tag::$(date +"%Y.%m.%d-%H%M")"
        echo "::set-output name=status::success"
        
    - name: Upload firmware to release
      uses: softprops/action-gh-release@v1
      if: steps.tag.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.tag.outputs.release_tag }}
        files: openwrt/artifactphicomm/*
        
    - name: Delete workflow runs
      uses: GitRML/delete-workflow-runs@main
      with:
        retain_days: 10
        keep_minimum_runs: 3
        
    - name: Remove old Releases
      uses: dev-drprasad/delete-older-releases@v0.2.0
      with:
        keep_latest: 3
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}   
